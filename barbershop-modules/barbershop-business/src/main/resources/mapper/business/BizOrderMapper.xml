<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.barbershop.business.mapper.BizOrderMapper">

    <resultMap type="BizOrder" id="BizOrderResult">
        <id property="orderId"    column="order_id"    />
        <result property="userId"    column="user_id"    />
        <result property="customerId"    column="customer_id"    />
        <result property="orderType"    column="order_type"    />
        <result property="orderPrice"    column="order_price"    />
        <result property="createBy"    column="create_by"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateBy"    column="update_by"    />
        <result property="updateTime"    column="update_time"    />
        <result property="remark"    column="remark"    />
        <association property="sysUser"    javaType="com.barbershop.system.api.domain.SysUser"    resultMap="SysUserResult" column=""/>
        <association  property="bizCustomer"   javaType="BizCustomer"  resultMap="BizCustomerResult" />
    </resultMap>

    <resultMap type="com.barbershop.system.api.domain.SysUser" id="SysUserResult">
        <id     property="userId"       column="user_id"      />
        <result property="userName"     column="user_name"    />
        <result property="nickName"     column="sysUserNickName"    />
        <result property="commission"    column="commission"    />
    </resultMap>

    <resultMap type="BizCustomer" id="BizCustomerResult">
        <id property="customerId"    column="customer_id"    />
        <result property="customerName"    column="customer_name"    />
        <result property="nickName"    column="bizCustomerNickName"    />
        <result property="customerAccountBalance"    column="customer_account_balance"    />
    </resultMap>


    <sql id="selectBizOrderVo">
        select o.order_id, o.user_id,o.customer_id, o.order_type,o.order_price,
               o.create_by,o.create_time, o.update_by, o.update_time, o.remark,
               c.customer_id,c.customer_name,c.nick_name as bizCustomerNickName, c.customer_account_balance,
               u.user_id, u.user_name, u.nick_name as sysUserNickName, u.commission
        from biz_order o
                 left join sys_user u on o.user_id = u.user_id
                 left join biz_customer c on o.customer_id = c.customer_id
    </sql>

        <select id="selectBizOrderList" parameterType="BizOrder" resultMap="BizOrderResult">
                <include refid="selectBizOrderVo"/>
                <where>
                    <if test="userId != null "> and o.user_id = #{userId}</if>
                    <if test="customerId != null "> and o.customer_id = #{customerId}</if>
                    <if test="orderType != null  and orderType != ''"> and o.order_type = #{orderType}</if>
                    <if test="params.beginTime != null and params.beginTime != ''"><!-- 开始时间检索 -->
                        AND date_format(o.create_time,'%y%m%d') &gt;= date_format(#{params.beginTime},'%y%m%d')
                    </if>
                    <if test="params.endTime != null and params.endTime != ''"><!-- 结束时间检索 -->
                        AND date_format(o.create_time,'%y%m%d') &lt;= date_format(#{params.endTime},'%y%m%d')
                    </if>
                </where>
            </select>


            <select id="selectBizOrderByOrderId" parameterType="Long" resultMap="BizOrderResult">
                <include refid="selectBizOrderVo"/>
                where order_id = #{orderId}
            </select>

            <insert id="insertBizOrder" parameterType="BizOrder" useGeneratedKeys="true" keyProperty="orderId">
                insert into biz_order
                <trim prefix="(" suffix=")" suffixOverrides=",">
                    <if test="userId != null">user_id,</if>
                    <if test="customerId != null">customer_id,</if>
                    <if test="orderType != null">order_type,</if>
                    <if test="orderPrice != null">order_price,</if>
                    <if test="createBy != null">create_by,</if>
                    <if test="createTime != null">create_time,</if>
                    <if test="updateBy != null">update_by,</if>
                    <if test="updateTime != null">update_time,</if>
                    <if test="remark != null">remark,</if>
                </trim>
                <trim prefix="values (" suffix=")" suffixOverrides=",">
                    <if test="userId != null">#{userId},</if>
                    <if test="customerId != null">#{customerId},</if>
                    <if test="orderType != null">#{orderType},</if>
                    <if test="orderPrice != null">#{orderPrice},</if>
                    <if test="createBy != null">#{createBy},</if>
                    <if test="createTime != null">#{createTime},</if>
                    <if test="updateBy != null">#{updateBy},</if>
                    <if test="updateTime != null">#{updateTime},</if>
                    <if test="remark != null">#{remark},</if>
                </trim>
            </insert>

            <update id="updateBizOrder" parameterType="BizOrder">
                update biz_order
                <trim prefix="SET" suffixOverrides=",">
                    <if test="userId != null">user_id = #{userId},</if>
                    <if test="customerId != null">customer_id = #{customerId},</if>
                    <if test="orderType != null">order_type = #{orderType},</if>
                    <if test="orderPrice != null">order_price = #{orderPrice},</if>
                    <if test="createBy != null">create_by = #{createBy},</if>
                    <if test="createTime != null">create_time = #{createTime},</if>
                    <if test="updateBy != null">update_by = #{updateBy},</if>
                    <if test="updateTime != null">update_time = #{updateTime},</if>
                    <if test="remark != null">remark = #{remark},</if>
                </trim>
                where order_id = #{orderId}
            </update>

            <delete id="deleteBizOrderByOrderId" parameterType="Long">
                delete from biz_order where order_id = #{orderId}
            </delete>

            <delete id="deleteBizOrderByOrderIds" parameterType="String">
                delete from biz_order where order_id in
                <foreach item="orderId" collection="array" open="(" separator="," close=")">
                    #{orderId}
                </foreach>
            </delete>

        <select id="orderSumByMap" resultType="java.math.BigDecimal">
            select sum(order_price) from biz_order
            <where>
                <if test="begin != null">
                    and create_time &gt; #{begin}
                </if>
                <if test="end != null">
                    and create_time &lt; #{end}
                </if>
            </where>
        </select>

        <select id="orderCountByMap" resultType="Double">
            select count(order_id) from biz_order
            <where>
                <if test="begin != null">
                    and create_time > #{begin}
                </if>
                <if test="end != null">
                    and create_time &lt; #{end}
                </if>
            </where>
        </select>

        </mapper>